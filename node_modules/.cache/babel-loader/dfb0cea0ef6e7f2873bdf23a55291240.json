{"ast":null,"code":"var _jsxFileName = \"D:\\\\LEARNING__________\\\\23.LT-ReactJs-ZendVn\\\\v23\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport Title from \"./components/Title\";\nimport Control from \"./components/Control\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport items from \"./mock/task\";\nimport SearchSortHandler from \"./control/SearchSortHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      items: items,\n      isShowForm: false,\n      strSearch: '',\n      orderBy: '',\n      orderDir: '',\n      itemSelected: null\n    };\n\n    this.toggleForm = () => {\n      this.setState({\n        isShowForm: !this.state.isShowForm\n      });\n    };\n\n    this.handleSearch = value => {\n      this.setState({\n        strSearch: value\n      });\n    };\n\n    this.handleSort = value => {\n      this.setState({\n        orderBy: value.orderBy,\n        orderDir: value.orderDir\n      });\n    };\n\n    this.handleDelete = id => {\n      const items = this.state.items.filter(item => item.id !== id);\n      this.setState({\n        items: items\n      });\n    };\n\n    this.handleAdd = formState => {\n      const {\n        items\n      } = this.state;\n\n      let {\n        v4: idRandom\n      } = require(\"uuid\");\n\n      let {\n        taskName,\n        taskLevel,\n        taskId\n      } = formState;\n      items.push({\n        id: taskId ? taskId : idRandom(),\n        name: taskName,\n        level: Number(taskLevel)\n      }); // if (taskId !== null) {\n      //   idRandom = taskId;\n      //   for (const item of items) {\n      //     if (item.id === idRandom) {\n      //       item.name = taskName;\n      //       item.level = Number(taskLevel);\n      //       break;\n      //     }\n      //   }\n      // }\n      // else {\n      //   items.push({\n      //     id: idRandom(),\n      //     name: taskName,\n      //     level: Number(taskLevel),\n      //   });\n      // }\n\n      this.setState({\n        items: items,\n        isShowForm: false\n      });\n    };\n\n    this.handleEdit = item => {\n      this.setState({\n        itemSelected: item,\n        isShowForm: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      items,\n      isShowForm,\n      strSearch,\n      orderBy,\n      orderDir,\n      itemSelected\n    } = this.state;\n\n    if (strSearch || orderBy) {\n      var listShown = SearchSortHandler(items, orderBy, orderDir, strSearch);\n    }\n\n    console.log();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        toggleForm: this.toggleForm,\n        isShowForm: isShowForm,\n        strSearch: strSearch,\n        handleSearch: this.handleSearch,\n        handleSort: this.handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), isShowForm ? /*#__PURE__*/_jsxDEV(Form, {\n        toggleForm: this.toggleForm,\n        handleAdd: this.handleAdd,\n        editingItem: itemSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(List, {\n        items: listShown ? listShown : items,\n        handleDelete: this.handleDelete,\n        handleEdit: this.handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/LEARNING__________/23.LT-ReactJs-ZendVn/v23/src/App.js"],"names":["React","Component","Title","Control","Form","List","items","SearchSortHandler","App","state","isShowForm","strSearch","orderBy","orderDir","itemSelected","toggleForm","setState","handleSearch","value","handleSort","handleDelete","id","filter","item","handleAdd","formState","v4","idRandom","require","taskName","taskLevel","taskId","push","name","level","Number","handleEdit","render","listShown","console","log"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Title from \"./components/Title\";\nimport Control from \"./components/Control\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport items from \"./mock/task\";\nimport SearchSortHandler from \"./control/SearchSortHandler\";\n\nclass App extends Component {\n  state = {\n    items: items,\n    isShowForm: false,\n    strSearch: '',\n    orderBy: '',\n    orderDir: '',\n    itemSelected: null,\n  };\n\n  toggleForm = () => {\n    this.setState({\n      isShowForm: !this.state.isShowForm,\n    });\n  };\n\n  handleSearch = (value) => {\n    this.setState({ strSearch: value });\n  }\n\n  handleSort = (value) => {\n    this.setState({\n      orderBy: value.orderBy,\n      orderDir: value.orderDir\n    })\n  }\n\n  handleDelete = (id) => {\n    const items = this.state.items.filter(item => item.id !== id);\n    this.setState({ items: items });\n  }\n\n  // 4ms33ss\n  handleAdd = (formState) => {\n    const { items } = this.state;\n    let { v4: idRandom } = require(\"uuid\");\n    let { taskName, taskLevel, taskId } = formState;\n\n    items.push({\n      id: taskId ? taskId : idRandom(),\n      name: taskName,\n      level: Number(taskLevel),\n    });\n\n    // if (taskId !== null) {\n    //   idRandom = taskId;\n    //   for (const item of items) {\n    //     if (item.id === idRandom) {\n    //       item.name = taskName;\n    //       item.level = Number(taskLevel);\n    //       break;\n    //     }\n    //   }\n    // }\n    // else {\n    //   items.push({\n    //     id: idRandom(),\n    //     name: taskName,\n    //     level: Number(taskLevel),\n    //   });\n    // }\n\n    this.setState({\n      items: items,\n      isShowForm: false,\n    })\n  }\n\n  handleEdit = (item) => {\n    this.setState({\n      itemSelected: item,\n      isShowForm: true,\n    })\n  }\n\n  render() {\n    const { items, isShowForm,\n      strSearch, orderBy, orderDir, itemSelected } = this.state;\n\n    if (strSearch || orderBy) {\n      var listShown = SearchSortHandler(\n        items, orderBy, orderDir, strSearch);\n    }\n\n    console.log();\n\n    return (\n      <div>\n        <Title />\n        <Control\n          toggleForm={this.toggleForm}\n          isShowForm={isShowForm}\n          strSearch={strSearch}\n          handleSearch={this.handleSearch}\n          handleSort={this.handleSort}\n        />\n        {\n          isShowForm ?\n            <Form\n              toggleForm={this.toggleForm}\n              handleAdd={this.handleAdd}\n              editingItem={itemSelected}\n            /> : \"\"\n        }\n        {\n          (<List\n            items={listShown ? listShown : items}\n            handleDelete={this.handleDelete}\n            handleEdit={this.handleEdit}\n          />)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}