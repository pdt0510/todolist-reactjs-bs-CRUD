{"ast":null,"code":"var _jsxFileName = \"D:\\\\LEARNING__________\\\\23.LT-ReactJs-ZendVn\\\\v23\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport Title from \"./components/Title\";\nimport Control from \"./components/Control\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport items from \"./mock/task\"; //src4 - App2.js\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      items: items,\n      isShowForm: false,\n      strSearch: ''\n    };\n\n    this.handleToggleForm = () => {\n      this.setState({\n        isShowForm: !this.state.isShowForm\n      });\n    };\n\n    this.handleSearch = value => {\n      this.setState({\n        strSearch: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      items,\n      isShowForm,\n      strSearch\n    } = this.state; // v39xx1\n\n    this.searchForLevel = searchedLower => {\n      let searchedNum = null; //to num\n\n      if ('small'.includes(searchedLower)) {\n        searchedNum = 0;\n      } else if ('medium'.includes(searchedLower)) {\n        searchedNum = 1;\n      } else if ('high'.includes(searchedLower)) {\n        searchedNum = 2;\n      }\n\n      return searchedNum;\n    }; // filtering search by task name + level\n\n\n    this.searchedFilter = (stateItems, searchedLower, searchedNum) => {\n      let searchedItem = stateItems.filter(item => {\n        if (item.name.toLowerCase().includes(searchedLower)) {\n          return item;\n        } // \n        else if (item.level === searchedNum) {\n          return item;\n        }\n\n        return null;\n      });\n      return searchedItem;\n    };\n\n    let listShown = null;\n\n    if (strSearch) {\n      //converting searched cases\n      let searchedLower = strSearch.toLowerCase(); //to lower\n\n      let searchedNum = this.searchForLevel(searchedLower); //filtering search by...\n\n      let searchedItem = this.searchedFilter(items, searchedLower, searchedNum); //assigning into <List as props\n\n      listShown = /*#__PURE__*/_jsxDEV(List, {\n        items: searchedItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this);\n    } else {\n      listShown = /*#__PURE__*/_jsxDEV(List, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        toggleForm: this.handleToggleForm,\n        isShowForm: isShowForm,\n        strSearch: strSearch,\n        handleSearch: this.handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), isShowForm ? /*#__PURE__*/_jsxDEV(Form, {\n        toggleForm: this.handleToggleForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this) : \"\", listShown]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/LEARNING__________/23.LT-ReactJs-ZendVn/v23/src/App.js"],"names":["React","Component","Title","Control","Form","List","items","App","state","isShowForm","strSearch","handleToggleForm","setState","handleSearch","value","render","searchForLevel","searchedLower","searchedNum","includes","searchedFilter","stateItems","searchedItem","filter","item","name","toLowerCase","level","listShown"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Title from \"./components/Title\";\nimport Control from \"./components/Control\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport items from \"./mock/task\";\n\n//src4 - App2.js\nclass App extends Component {\n  state = {\n    items: items,\n    isShowForm: false,\n    strSearch: '',\n  };\n\n  handleToggleForm = () => {\n    this.setState({ isShowForm: !this.state.isShowForm });\n  };\n\n  handleSearch = (value) => {\n    this.setState({ strSearch: value });\n  }\n\n  render() {\n    const { items, isShowForm, strSearch } = this.state;\n\n    // v39xx1\n    this.searchForLevel = (searchedLower) => {\n      let searchedNum = null; //to num\n      if ('small'.includes(searchedLower)) { searchedNum = 0; }\n      else if ('medium'.includes(searchedLower)) { searchedNum = 1; }\n      else if ('high'.includes(searchedLower)) { searchedNum = 2; }\n      return searchedNum;\n    }\n\n    // filtering search by task name + level\n    this.searchedFilter = (stateItems, searchedLower, searchedNum) => {\n      let searchedItem = stateItems.filter(item => {\n        if (item.name.toLowerCase().includes(\n          searchedLower)) { return item; }\n\n        // \n        else if (item.level === searchedNum) { return item }\n        return null;\n      });\n      return searchedItem;\n    }\n\n    let listShown = null;\n    if (strSearch) {\n      //converting searched cases\n      let searchedLower = strSearch.toLowerCase();//to lower\n      let searchedNum = this.searchForLevel(searchedLower);\n\n      //filtering search by...\n      let searchedItem = this.searchedFilter(items, searchedLower, searchedNum)\n\n      //assigning into <List as props\n      listShown = <List items={searchedItem} />\n    }\n    else {\n      listShown = <List items={items} />\n    }\n\n    return (\n      <div>\n        <Title />\n        <Control\n          toggleForm={this.handleToggleForm}\n          isShowForm={isShowForm}\n          strSearch={strSearch}\n          handleSearch={this.handleSearch}\n        />\n        {\n          isShowForm ?\n            <Form toggleForm={this.handleToggleForm} /> : \"\"\n        }\n\n        {listShown}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}