{"ast":null,"code":"var _jsxFileName = \"D:\\\\LEARNING__________\\\\23.LT-ReactJs-ZendVn\\\\v23\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport Title from \"./components/Title\";\nimport Control from \"./components/Control\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport tasks from \"./mock/task\";\nimport SearchSortHandler from \"./control/SearchSortHandler\"; //src9, app2\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      items: [],\n      isShowForm: false,\n      strSearch: '',\n      orderBy: '',\n      orderDir: '',\n      itemSelected: null\n    };\n\n    this.UNSAFE_componentWillMount = () => {\n      this.setState({\n        items: tasks\n      }); // 10ms51ss, 12ms02ss\n      // localStorage.setItem(\"tasks\", JSON.stringify(this.state.items));\n      // localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n\n      localStorage.setItem(\"tasks\", 'dss'); // 12ms41ss\n\n      console.log(localStorage.getItem('tasks')); // 13ms17ss\n      // localStorage.removeItem('tasks');\n\n      console.log(localStorage.getItem('tasks'));\n    };\n\n    this.toggleForm = () => {\n      this.setState({\n        isShowForm: !this.state.isShowForm,\n        itemSelected: null\n      });\n    };\n\n    this.handleSearch = value => {\n      this.setState({\n        strSearch: value\n      });\n    };\n\n    this.handleSort = value => {\n      this.setState({\n        orderBy: value.orderBy,\n        orderDir: value.orderDir\n      });\n    };\n\n    this.handleDelete = id => {\n      const items = this.state.items.filter(item => item.id !== id);\n      this.setState({\n        items: items\n      });\n    };\n\n    this.handleAdd = formState => {\n      const {\n        items\n      } = this.state;\n\n      let {\n        v4: idRandom\n      } = require(\"uuid\");\n\n      let {\n        taskName,\n        taskLevel,\n        taskId\n      } = formState;\n\n      if (taskId !== null) {\n        for (const item of items) {\n          if (item.id === taskId) {\n            item.name = taskName;\n            item.level = Number(taskLevel);\n            break;\n          }\n        }\n      } else {\n        items.push({\n          id: idRandom(),\n          name: taskName,\n          level: Number(taskLevel)\n        });\n      }\n\n      this.setState({\n        items: items,\n        isShowForm: false\n      });\n    };\n\n    this.handleEdit = item => {\n      this.setState({\n        itemSelected: item,\n        isShowForm: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      items,\n      isShowForm,\n      strSearch,\n      orderBy,\n      orderDir,\n      itemSelected\n    } = this.state;\n\n    if (strSearch || orderBy) {\n      var listShown = SearchSortHandler(items, orderBy, orderDir, strSearch);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Control, {\n        toggleForm: this.toggleForm,\n        isShowForm: isShowForm,\n        strSearch: strSearch,\n        handleSearch: this.handleSearch,\n        handleSort: this.handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), isShowForm ? /*#__PURE__*/_jsxDEV(Form, {\n        toggleForm: this.toggleForm,\n        handleAdd: this.handleAdd,\n        editingItem: itemSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(List, {\n        items: listShown ? listShown : items,\n        handleDelete: this.handleDelete,\n        handleEdit: this.handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/LEARNING__________/23.LT-ReactJs-ZendVn/v23/src/App.js"],"names":["React","Component","Title","Control","Form","List","tasks","SearchSortHandler","App","state","items","isShowForm","strSearch","orderBy","orderDir","itemSelected","UNSAFE_componentWillMount","setState","localStorage","setItem","console","log","getItem","toggleForm","handleSearch","value","handleSort","handleDelete","id","filter","item","handleAdd","formState","v4","idRandom","require","taskName","taskLevel","taskId","name","level","Number","push","handleEdit","render","listShown"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Title from \"./components/Title\";\nimport Control from \"./components/Control\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport tasks from \"./mock/task\";\nimport SearchSortHandler from \"./control/SearchSortHandler\";\n\n//src9, app2\nclass App extends Component {\n  state = {\n    items: [],  \n    isShowForm: false,\n    strSearch: '',\n    orderBy: '',\n    orderDir: '',\n    itemSelected: null,\n  };\n\n  UNSAFE_componentWillMount = () => {\n    this.setState({\n      items: tasks,\n    })\n\n    // 10ms51ss, 12ms02ss\n    // localStorage.setItem(\"tasks\", JSON.stringify(this.state.items));\n    // localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    localStorage.setItem(\"tasks\", 'dss');\n\n    // 12ms41ss\n    console.log(localStorage.getItem('tasks'));\n\n    // 13ms17ss\n    // localStorage.removeItem('tasks');\n    console.log(localStorage.getItem('tasks'));\n\n\n\n  }\n\n  toggleForm = () => {\n    this.setState({\n      isShowForm: !this.state.isShowForm,\n      itemSelected: null\n    });\n  };\n\n  handleSearch = (value) => {\n    this.setState({ strSearch: value });\n  }\n\n  handleSort = (value) => {\n    this.setState({\n      orderBy: value.orderBy,\n      orderDir: value.orderDir\n    })\n  }\n\n  handleDelete = (id) => {\n    const items = this.state.items.filter(item => item.id !== id);\n    this.setState({ items: items });\n  }\n\n  handleAdd = (formState) => {\n    const { items } = this.state;\n    let { v4: idRandom } = require(\"uuid\");\n    let { taskName, taskLevel, taskId } = formState;\n\n    if (taskId !== null) {\n      for (const item of items) {\n        if (item.id === taskId) {\n          item.name = taskName;\n          item.level = Number(taskLevel);\n          break;\n        }\n      }\n    }\n    else {\n      items.push({\n        id: idRandom(),\n        name: taskName,\n        level: Number(taskLevel),\n      });\n    }\n\n    this.setState({\n      items: items,\n      isShowForm: false,\n    })\n  }\n\n  handleEdit = (item) => {\n    this.setState({\n      itemSelected: item,\n      isShowForm: true,\n    })\n  }\n\n  render() {\n    const { items, isShowForm,\n      strSearch, orderBy, orderDir, itemSelected } = this.state;\n\n    if (strSearch || orderBy) {\n      var listShown = SearchSortHandler(\n        items, orderBy, orderDir, strSearch);\n    }\n\n    return (\n      <div>\n        <Title />\n        <Control\n          toggleForm={this.toggleForm}\n          isShowForm={isShowForm}\n          strSearch={strSearch}\n          handleSearch={this.handleSearch}\n          handleSort={this.handleSort}\n        />\n        {\n          isShowForm ?\n            <Form\n              toggleForm={this.toggleForm}\n              handleAdd={this.handleAdd}\n              editingItem={itemSelected}\n            /> : \"\"\n        }\n        {\n          (<List\n            items={listShown ? listShown : items}\n            handleDelete={this.handleDelete}\n            handleEdit={this.handleEdit}\n          />)\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}