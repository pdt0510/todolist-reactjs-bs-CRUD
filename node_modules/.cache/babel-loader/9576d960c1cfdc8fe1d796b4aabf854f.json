{"ast":null,"code":"const initialState = {\n  songs: [{\n    id: 1,\n    title: \"No Srubs\",\n    duration: \"4:01\"\n  }, {\n    id: 2,\n    title: \"No Srubs 2\",\n    duration: \"4:02\"\n  }, {\n    id: 3,\n    title: \"No Srubs 3\",\n    duration: \"4:03\"\n  }, {\n    id: 4,\n    title: \"No Srubs 4\",\n    duration: \"4:04\"\n  }, {\n    id: 5,\n    title: \"No Srubs 5\",\n    duration: \"4:05\"\n  }]\n};\n\nconst songReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SELECT_SONG\":\n      const songs = state.songs.filter(song => song.id === action.payload.id);\n\n      if (songs && songs.length > 0) {\n        return { ...state,\n          selectedSong: songs[0]\n        };\n      }\n\n      return state;\n\n    case \"ADD_SONG\":\n      return { ...state,\n        songs: [...state.songs, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default songReducer;","map":{"version":3,"sources":["D:/LEARNING__________/18.LT-FE-React-Redux-SemanticUI-Axios-Context/v20/reactjs-redux/src/redux/songs/song-reducer.js"],"names":["initialState","songs","id","title","duration","songReducer","state","action","type","filter","song","payload","length","selectedSong"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACH;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,UAAhB;AAA4BC,IAAAA,QAAQ,EAAE;AAAtC,GADG,EAEH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,YAAhB;AAA8BC,IAAAA,QAAQ,EAAE;AAAxC,GAFG,EAGH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,YAAhB;AAA8BC,IAAAA,QAAQ,EAAE;AAAxC,GAHG,EAIH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,YAAhB;AAA8BC,IAAAA,QAAQ,EAAE;AAAxC,GAJG,EAKH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,YAAhB;AAA8BC,IAAAA,QAAQ,EAAE;AAAxC,GALG;AADU,CAArB;;AAUA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,YAAMP,KAAK,GAAGK,KAAK,CAACL,KAAN,CAAYQ,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYK,MAAM,CAACI,OAAP,CAAeT,EAAtD,CAAd;;AAEA,UAAID,KAAK,IAAIA,KAAK,CAACW,MAAN,GAAe,CAA5B,EAA+B;AAC3B,eAAO,EAAE,GAAGN,KAAL;AAAYO,UAAAA,YAAY,EAAEZ,KAAK,CAAC,CAAD;AAA/B,SAAP;AACH;;AACD,aAAOK,KAAP;;AAEJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGA,KADA;AAEHL,QAAAA,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiBM,MAAM,CAACI,OAAxB;AAFJ,OAAP;;AAKJ;AACI,aAAOL,KAAP;AAhBR;AAkBH,CAnBD;;AAqBA,eAAeD,WAAf","sourcesContent":["const initialState = {\r\n    songs: [\r\n        { id: 1, title: \"No Srubs\", duration: \"4:01\" },\r\n        { id: 2, title: \"No Srubs 2\", duration: \"4:02\" },\r\n        { id: 3, title: \"No Srubs 3\", duration: \"4:03\" },\r\n        { id: 4, title: \"No Srubs 4\", duration: \"4:04\" },\r\n        { id: 5, title: \"No Srubs 5\", duration: \"4:05\" },\r\n    ],\r\n};\r\n\r\nconst songReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SELECT_SONG\":\r\n            const songs = state.songs.filter(song => song.id === action.payload.id);\r\n\r\n            if (songs && songs.length > 0) {\r\n                return { ...state, selectedSong: songs[0] }\r\n            }\r\n            return state;\r\n\r\n        case \"ADD_SONG\":\r\n            return {\r\n                ...state,\r\n                songs: [...state.songs, action.payload],\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default songReducer;\r\n"]},"metadata":{},"sourceType":"module"}