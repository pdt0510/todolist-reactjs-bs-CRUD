{"ast":null,"code":"//src6, v42xx1\nconst levelConverted = searchedLower => {\n  let searchedLevel = null;\n\n  if (\"small\".includes(searchedLower)) {\n    searchedLevel = 0;\n  } else if (\"medium\".includes(searchedLower)) {\n    searchedLevel = 1;\n  } else if (\"high\".includes(searchedLower)) {\n    searchedLevel = 2;\n  }\n\n  return searchedLevel;\n};\n\nconst sortNameBy = (list, orderDir) => {\n  if (orderDir === \"ASC\") {\n    return list.sort((a, b) => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n      if (nameA < nameB) return -1;else if (nameA > nameB) return 1;else return 0;\n    });\n  } else {\n    return list.sort((a, b) => {\n      const nameA = a.name.toUpperCase();\n      const nameB = b.name.toUpperCase();\n      if (nameA < nameB) return 1;else if (nameA > nameB) return -1;else return 0;\n    });\n  }\n};\n\nconst sortLevelBy = (list, orderDir) => {\n  if (orderDir === \"ASC\") {\n    return list.sort((a, b) => {\n      return a.level - b.level;\n    });\n  } else {\n    return list.sort((a, b) => {\n      return b.level - a.level;\n    });\n  }\n};\n\nconst searchedFilter = (items, strSearch) => {\n  let searchedLower = strSearch.toLowerCase();\n  let searchedLevel = levelConverted(searchedLower);\n  let searchedItem = items.filter(item => {\n    if (item.name.toLowerCase().includes(searchedLower)) {\n      return item;\n    } else if (item.level === searchedLevel) {\n      return item;\n    }\n\n    return null;\n  });\n  return searchedItem;\n};\n\nconst handleSortByName = (list, orderDir) => {\n  return sortNameBy(list, orderDir);\n};\n\nconst handleSortByLevel = (list, orderDir) => {\n  return sortLevelBy(list, orderDir);\n};\n\nconst SearchSortHandler = (items, orderBy, orderDir, strSearch) => {\n  let listShown = null; //tạo new array để dùng, để ko bị tham chiếu lẫn nhau\n\n  if (strSearch) {\n    listShown = searchedFilter(items, strSearch);\n  } else if (!strSearch) {\n    listShown = Array.from(items);\n  }\n\n  if (orderBy === \"NAME\") {\n    listShown = handleSortByName(listShown, orderDir);\n  } else if (orderBy === \"LEVEL\") {\n    listShown = handleSortByLevel(listShown, orderDir);\n  }\n\n  return listShown;\n};\n\n_c = SearchSortHandler;\nexport default SearchSortHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchSortHandler\");","map":{"version":3,"sources":["D:/LEARNING__________/23.LT-ReactJs-ZendVn/v23/src/control/SearchSortHandler.js"],"names":["levelConverted","searchedLower","searchedLevel","includes","sortNameBy","list","orderDir","sort","a","b","nameA","name","toUpperCase","nameB","sortLevelBy","level","searchedFilter","items","strSearch","toLowerCase","searchedItem","filter","item","handleSortByName","handleSortByLevel","SearchSortHandler","orderBy","listShown","Array","from"],"mappings":"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","sourcesContent":["//src6, v42xx1\r\nconst levelConverted = (searchedLower) => {\r\n  let searchedLevel = null;\r\n  if (\"small\".includes(searchedLower)) {\r\n    searchedLevel = 0;\r\n  } else if (\"medium\".includes(searchedLower)) {\r\n    searchedLevel = 1;\r\n  } else if (\"high\".includes(searchedLower)) {\r\n    searchedLevel = 2;\r\n  }\r\n  return searchedLevel;\r\n};\r\n\r\nconst sortNameBy = (list, orderDir) => {\r\n  if (orderDir === \"ASC\") {\r\n    return list.sort((a, b) => {\r\n      const nameA = a.name.toUpperCase();\r\n      const nameB = b.name.toUpperCase();\r\n      if (nameA < nameB) return -1;\r\n      else if (nameA > nameB) return 1;\r\n      else return 0;\r\n    });\r\n  } else {\r\n    return list.sort((a, b) => {\r\n      const nameA = a.name.toUpperCase();\r\n      const nameB = b.name.toUpperCase();\r\n      if (nameA < nameB) return 1;\r\n      else if (nameA > nameB) return -1;\r\n      else return 0;\r\n    });\r\n  }\r\n};\r\n\r\nconst sortLevelBy = (list, orderDir) => {\r\n  if (orderDir === \"ASC\") {\r\n    return list.sort((a, b) => {\r\n      return a.level - b.level;\r\n    });\r\n  } else {\r\n    return list.sort((a, b) => {\r\n      return b.level - a.level;\r\n    });\r\n  }\r\n};\r\n\r\nconst searchedFilter = (items, strSearch) => {\r\n  let searchedLower = strSearch.toLowerCase();\r\n  let searchedLevel = levelConverted(searchedLower);\r\n\r\n  let searchedItem = items.filter((item) => {\r\n    if (item.name.toLowerCase().includes(searchedLower)) {\r\n      return item;\r\n    } else if (item.level === searchedLevel) {\r\n      return item;\r\n    }\r\n    return null;\r\n  });\r\n  return searchedItem;\r\n};\r\n\r\nconst handleSortByName = (list, orderDir) => {\r\n  return sortNameBy(list, orderDir);\r\n};\r\n\r\nconst handleSortByLevel = (list, orderDir) => {\r\n  return sortLevelBy(list, orderDir);\r\n};\r\n\r\nconst SearchSortHandler = (items, orderBy, orderDir, strSearch) => {\r\n  let listShown = null; //tạo new array để dùng, để ko bị tham chiếu lẫn nhau\r\n  if (strSearch) { \r\n    listShown = searchedFilter(items, strSearch);\r\n   }\r\n  else if (!strSearch) {\r\n     listShown = Array.from(items); }\r\n\r\n  if (orderBy === \"NAME\") {\r\n    listShown = handleSortByName(listShown, orderDir);\r\n  }\r\n  else if (orderBy === \"LEVEL\") {\r\n    listShown = handleSortByLevel(listShown, orderDir);\r\n  }\r\n\r\n  return listShown;\r\n};\r\n\r\nexport default SearchSortHandler;\r\n"]},"metadata":{},"sourceType":"module"}